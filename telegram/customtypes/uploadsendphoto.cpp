// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "uploadsendphoto.h"
#include "../coretypes.h"

UploadSendPhoto::UploadSendPhoto(UploadSendPhotoClassType classType) :
    m_partId(0),
    m_totalSize(0),
    m_uploaded(0),
    m_classType(classType)
{
}

UploadSendPhoto::UploadSendPhoto(const Null &null) :
    TelegramCustomTypeObject(null),
    m_partId(0),
    m_totalSize(0),
    m_uploaded(0),
    m_classType(typeUploadSendPhotoEmpty)
{
}

UploadSendPhoto::~UploadSendPhoto() {
}

void UploadSendPhoto::setPartId(qint32 partId) {
    m_partId = partId;
}

qint32 UploadSendPhoto::partId() const {
    return m_partId;
}

void UploadSendPhoto::setPhoto(const PhotosPhoto &photo) {
    m_photo = photo;
}

PhotosPhoto UploadSendPhoto::photo() const {
    return m_photo;
}

void UploadSendPhoto::setTotalSize(qint32 totalSize) {
    m_totalSize = totalSize;
}

qint32 UploadSendPhoto::totalSize() const {
    return m_totalSize;
}

void UploadSendPhoto::setUploaded(qint32 uploaded) {
    m_uploaded = uploaded;
}

qint32 UploadSendPhoto::uploaded() const {
    return m_uploaded;
}

bool UploadSendPhoto::operator ==(const UploadSendPhoto &b) const {
    return m_classType == b.m_classType &&
           m_partId == b.m_partId &&
           m_photo == b.m_photo &&
           m_totalSize == b.m_totalSize &&
           m_uploaded == b.m_uploaded;
}

void UploadSendPhoto::setClassType(UploadSendPhoto::UploadSendPhotoClassType classType) {
    m_classType = classType;
}

UploadSendPhoto::UploadSendPhotoClassType UploadSendPhoto::classType() const {
    return m_classType;
}

