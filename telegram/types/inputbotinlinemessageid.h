// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTBOTINLINEMESSAGEID
#define LQTG_TYPE_INPUTBOTINLINEMESSAGEID

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QtGlobal>

class LIBQTELEGRAMSHARED_EXPORT InputBotInlineMessageID : public TelegramTypeObject
{
public:
    enum InputBotInlineMessageIDClassType {
        typeInputBotInlineMessageID = 0x890c3d89
    };

    InputBotInlineMessageID(InputBotInlineMessageIDClassType classType = typeInputBotInlineMessageID, InboundPkt *in = 0);
    InputBotInlineMessageID(InboundPkt *in);
    InputBotInlineMessageID(const Null&);
    virtual ~InputBotInlineMessageID();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setDcId(qint32 dcId);
    qint32 dcId() const;

    void setId(qint64 id);
    qint64 id() const;

    void setClassType(InputBotInlineMessageIDClassType classType);
    InputBotInlineMessageIDClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const InputBotInlineMessageID &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    qint64 m_accessHash;
    qint32 m_dcId;
    qint64 m_id;
    InputBotInlineMessageIDClassType m_classType;
};

Q_DECLARE_METATYPE(InputBotInlineMessageID)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const InputBotInlineMessageID &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, InputBotInlineMessageID &item);

#endif // LQTG_TYPE_INPUTBOTINLINEMESSAGEID
