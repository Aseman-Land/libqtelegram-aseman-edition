// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_NEARESTDC_OBJECT
#define LQTG_TYPE_NEARESTDC_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/nearestdc.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT NearestDcObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(NearestDcType)
    Q_PROPERTY(QString country READ country WRITE setCountry NOTIFY countryChanged)
    Q_PROPERTY(qint32 nearestDc READ nearestDc WRITE setNearestDc NOTIFY nearestDcChanged)
    Q_PROPERTY(qint32 thisDc READ thisDc WRITE setThisDc NOTIFY thisDcChanged)
    Q_PROPERTY(NearestDc core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum NearestDcType {
        TypeNearestDc
    };

    NearestDcObject(const NearestDc &core, QObject *parent = 0);
    NearestDcObject(QObject *parent = 0);
    virtual ~NearestDcObject();

    void setCountry(const QString &country);
    QString country() const;

    void setNearestDc(qint32 nearestDc);
    qint32 nearestDc() const;

    void setThisDc(qint32 thisDc);
    qint32 thisDc() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const NearestDc &core);
    NearestDc core() const;

    NearestDcObject &operator =(const NearestDc &b);
    bool operator ==(const NearestDc &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void countryChanged();
    void nearestDcChanged();
    void thisDcChanged();

private Q_SLOTS:

private:
    NearestDc m_core;
};

#endif // LQTG_TYPE_NEARESTDC_OBJECT
