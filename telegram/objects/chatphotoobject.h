// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHATPHOTO_OBJECT
#define LQTG_TYPE_CHATPHOTO_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/chatphoto.h"

#include <QPointer>
#include "filelocationobject.h"

class LIBQTELEGRAMSHARED_EXPORT ChatPhotoObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ChatPhotoType)
    Q_PROPERTY(FileLocationObject* photoBig READ photoBig WRITE setPhotoBig NOTIFY photoBigChanged)
    Q_PROPERTY(FileLocationObject* photoSmall READ photoSmall WRITE setPhotoSmall NOTIFY photoSmallChanged)
    Q_PROPERTY(ChatPhoto core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ChatPhotoType {
        TypeChatPhotoEmpty,
        TypeChatPhoto
    };

    ChatPhotoObject(const ChatPhoto &core, QObject *parent = 0);
    ChatPhotoObject(QObject *parent = 0);
    virtual ~ChatPhotoObject();

    void setPhotoBig(FileLocationObject* photoBig);
    FileLocationObject* photoBig() const;

    void setPhotoSmall(FileLocationObject* photoSmall);
    FileLocationObject* photoSmall() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ChatPhoto &core);
    ChatPhoto core() const;

    ChatPhotoObject &operator =(const ChatPhoto &b);
    bool operator ==(const ChatPhoto &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void photoBigChanged();
    void photoSmallChanged();

private Q_SLOTS:
    void corePhotoBigChanged();
    void corePhotoSmallChanged();

private:
    QPointer<FileLocationObject> m_photoBig;
    QPointer<FileLocationObject> m_photoSmall;
    ChatPhoto m_core;
};

#endif // LQTG_TYPE_CHATPHOTO_OBJECT
