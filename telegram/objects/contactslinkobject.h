// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACTSLINK_OBJECT
#define LQTG_TYPE_CONTACTSLINK_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/contactslink.h"

#include <QPointer>
#include "contactlinkobject.h"
#include "userobject.h"

class LIBQTELEGRAMSHARED_EXPORT ContactsLinkObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ContactsLinkClassType)
    Q_PROPERTY(ContactLinkObject* foreignLink READ foreignLink WRITE setForeignLink NOTIFY foreignLinkChanged)
    Q_PROPERTY(ContactLinkObject* myLink READ myLink WRITE setMyLink NOTIFY myLinkChanged)
    Q_PROPERTY(UserObject* user READ user WRITE setUser NOTIFY userChanged)
    Q_PROPERTY(ContactsLink core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ContactsLinkClassType {
        TypeContactsLink
    };

    ContactsLinkObject(const ContactsLink &core, QObject *parent = 0);
    ContactsLinkObject(QObject *parent = 0);
    virtual ~ContactsLinkObject();

    void setForeignLink(ContactLinkObject* foreignLink);
    ContactLinkObject* foreignLink() const;

    void setMyLink(ContactLinkObject* myLink);
    ContactLinkObject* myLink() const;

    void setUser(UserObject* user);
    UserObject* user() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ContactsLink &core);
    ContactsLink core() const;

    ContactsLinkObject &operator =(const ContactsLink &b);
    bool operator ==(const ContactsLink &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void foreignLinkChanged();
    void myLinkChanged();
    void userChanged();

private Q_SLOTS:
    void coreForeignLinkChanged();
    void coreMyLinkChanged();
    void coreUserChanged();

private:
    QPointer<ContactLinkObject> m_foreignLink;
    QPointer<ContactLinkObject> m_myLink;
    QPointer<UserObject> m_user;
    ContactsLink m_core;
};

#endif // LQTG_TYPE_CONTACTSLINK_OBJECT
