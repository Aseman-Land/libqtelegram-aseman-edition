// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_TOPPEER_OBJECT
#define LQTG_TYPE_TOPPEER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/toppeer.h"

#include <QPointer>
#include "peerobject.h"

class LIBQTELEGRAMSHARED_EXPORT TopPeerObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(TopPeerClassType)
    Q_PROPERTY(PeerObject* peer READ peer WRITE setPeer NOTIFY peerChanged)
    Q_PROPERTY(qreal rating READ rating WRITE setRating NOTIFY ratingChanged)
    Q_PROPERTY(TopPeer core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum TopPeerClassType {
        TypeTopPeer
    };

    TopPeerObject(const TopPeer &core, QObject *parent = 0);
    TopPeerObject(QObject *parent = 0);
    virtual ~TopPeerObject();

    void setPeer(PeerObject* peer);
    PeerObject* peer() const;

    void setRating(qreal rating);
    qreal rating() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const TopPeer &core);
    TopPeer core() const;

    TopPeerObject &operator =(const TopPeer &b);
    bool operator ==(const TopPeer &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void peerChanged();
    void ratingChanged();

private Q_SLOTS:
    void corePeerChanged();

private:
    QPointer<PeerObject> m_peer;
    TopPeer m_core;
};

#endif // LQTG_TYPE_TOPPEER_OBJECT
