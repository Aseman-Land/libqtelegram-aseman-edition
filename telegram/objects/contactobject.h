// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACT_OBJECT
#define LQTG_TYPE_CONTACT_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/contact.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ContactObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ContactType)
    Q_PROPERTY(bool mutual READ mutual WRITE setMutual NOTIFY mutualChanged)
    Q_PROPERTY(qint32 userId READ userId WRITE setUserId NOTIFY userIdChanged)
    Q_PROPERTY(Contact core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ContactType {
        TypeContact
    };

    ContactObject(const Contact &core, QObject *parent = 0);
    ContactObject(QObject *parent = 0);
    virtual ~ContactObject();

    void setMutual(bool mutual);
    bool mutual() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const Contact &core);
    Contact core() const;

    ContactObject &operator =(const Contact &b);
    bool operator ==(const Contact &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void mutualChanged();
    void userIdChanged();

private Q_SLOTS:

private:
    Contact m_core;
};

#endif // LQTG_TYPE_CONTACT_OBJECT
