// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_AUTHAUTHORIZATION
#define LQTG_TYPE_AUTHAUTHORIZATION

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QVariant>
#include "user.h"

class LIBQTELEGRAMSHARED_EXPORT AuthAuthorization : public TelegramTypeObject
{
public:
    enum AuthAuthorizationClassType {
        typeAuthAuthorization = 0xff036af1
    };

    AuthAuthorization(AuthAuthorizationClassType classType = typeAuthAuthorization, InboundPkt *in = 0);
    AuthAuthorization(InboundPkt *in);
    AuthAuthorization(const Null&);
    virtual ~AuthAuthorization();

    void setUser(const User &user);
    User user() const;

    void setClassType(AuthAuthorizationClassType classType);
    AuthAuthorizationClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    QMap<QString, QVariant> toMap() const;
    static AuthAuthorization fromMap(const QMap<QString, QVariant> &map);

    bool operator ==(const AuthAuthorization &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    User m_user;
    AuthAuthorizationClassType m_classType;
};

Q_DECLARE_METATYPE(AuthAuthorization)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const AuthAuthorization &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, AuthAuthorization &item);

#endif // LQTG_TYPE_AUTHAUTHORIZATION
