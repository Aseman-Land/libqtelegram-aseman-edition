// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTCHANNEL_OBJECT
#define LQTG_TYPE_INPUTCHANNEL_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputchannel.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT InputChannelObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputChannelClassType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)
    Q_PROPERTY(InputChannel core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputChannelClassType {
        TypeInputChannelEmpty,
        TypeInputChannel
    };

    InputChannelObject(const InputChannel &core, QObject *parent = 0);
    InputChannelObject(QObject *parent = 0);
    virtual ~InputChannelObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setChannelId(qint32 channelId);
    qint32 channelId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputChannel &core);
    InputChannel core() const;

    InputChannelObject &operator =(const InputChannel &b);
    bool operator ==(const InputChannel &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void channelIdChanged();

private Q_SLOTS:

private:
    InputChannel m_core;
};

#endif // LQTG_TYPE_INPUTCHANNEL_OBJECT
