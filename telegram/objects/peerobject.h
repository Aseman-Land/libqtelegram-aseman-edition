// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PEER_OBJECT
#define LQTG_TYPE_PEER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/peer.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT PeerObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PeerClassType)
    Q_PROPERTY(qint32 channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)
    Q_PROPERTY(qint32 chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
    Q_PROPERTY(qint32 userId READ userId WRITE setUserId NOTIFY userIdChanged)
    Q_PROPERTY(Peer core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PeerClassType {
        TypePeerUser,
        TypePeerChat,
        TypePeerChannel
    };

    PeerObject(const Peer &core, QObject *parent = 0);
    PeerObject(QObject *parent = 0);
    virtual ~PeerObject();

    void setChannelId(qint32 channelId);
    qint32 channelId() const;

    void setChatId(qint32 chatId);
    qint32 chatId() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const Peer &core);
    Peer core() const;

    PeerObject &operator =(const Peer &b);
    bool operator ==(const Peer &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void channelIdChanged();
    void chatIdChanged();
    void userIdChanged();

private Q_SLOTS:

private:
    Peer m_core;
};

#endif // LQTG_TYPE_PEER_OBJECT
