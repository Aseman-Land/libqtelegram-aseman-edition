// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PHOTOSPHOTOS_OBJECT
#define LQTG_TYPE_PHOTOSPHOTOS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/photosphotos.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT PhotosPhotosObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PhotosPhotosType)
    Q_PROPERTY(qint32 count READ count WRITE setCount NOTIFY countChanged)
    Q_PROPERTY(QList<Photo> photos READ photos WRITE setPhotos NOTIFY photosChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(PhotosPhotos core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PhotosPhotosType {
        TypePhotosPhotos,
        TypePhotosPhotosSlice
    };

    PhotosPhotosObject(const PhotosPhotos &core, QObject *parent = 0);
    PhotosPhotosObject(QObject *parent = 0);
    virtual ~PhotosPhotosObject();

    void setCount(qint32 count);
    qint32 count() const;

    void setPhotos(const QList<Photo> &photos);
    QList<Photo> photos() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const PhotosPhotos &core);
    PhotosPhotos core() const;

    PhotosPhotosObject &operator =(const PhotosPhotos &b);
    bool operator ==(const PhotosPhotos &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void countChanged();
    void photosChanged();
    void usersChanged();

private Q_SLOTS:

private:
    PhotosPhotos m_core;
};

#endif // LQTG_TYPE_PHOTOSPHOTOS_OBJECT
