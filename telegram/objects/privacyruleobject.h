// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PRIVACYRULE_OBJECT
#define LQTG_TYPE_PRIVACYRULE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/privacyrule.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT PrivacyRuleObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PrivacyRuleClassType)
    Q_PROPERTY(QList<qint32> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(PrivacyRule core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PrivacyRuleClassType {
        TypePrivacyValueAllowContacts,
        TypePrivacyValueAllowAll,
        TypePrivacyValueAllowUsers,
        TypePrivacyValueDisallowContacts,
        TypePrivacyValueDisallowAll,
        TypePrivacyValueDisallowUsers
    };

    PrivacyRuleObject(const PrivacyRule &core, QObject *parent = 0);
    PrivacyRuleObject(QObject *parent = 0);
    virtual ~PrivacyRuleObject();

    void setUsers(const QList<qint32> &users);
    QList<qint32> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const PrivacyRule &core);
    PrivacyRule core() const;

    PrivacyRuleObject &operator =(const PrivacyRule &b);
    bool operator ==(const PrivacyRule &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void usersChanged();

private Q_SLOTS:

private:
    PrivacyRule m_core;
};

#endif // LQTG_TYPE_PRIVACYRULE_OBJECT
