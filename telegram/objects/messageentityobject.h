// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGEENTITY_OBJECT
#define LQTG_TYPE_MESSAGEENTITY_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messageentity.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessageEntityObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessageEntityClassType)
    Q_PROPERTY(QString language READ language WRITE setLanguage NOTIFY languageChanged)
    Q_PROPERTY(qint32 length READ length WRITE setLength NOTIFY lengthChanged)
    Q_PROPERTY(qint32 offset READ offset WRITE setOffset NOTIFY offsetChanged)
    Q_PROPERTY(QString url READ url WRITE setUrl NOTIFY urlChanged)
    Q_PROPERTY(MessageEntity core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessageEntityClassType {
        TypeMessageEntityUnknown,
        TypeMessageEntityMention,
        TypeMessageEntityHashtag,
        TypeMessageEntityBotCommand,
        TypeMessageEntityUrl,
        TypeMessageEntityEmail,
        TypeMessageEntityBold,
        TypeMessageEntityItalic,
        TypeMessageEntityCode,
        TypeMessageEntityPre,
        TypeMessageEntityTextUrl
    };

    MessageEntityObject(const MessageEntity &core, QObject *parent = 0);
    MessageEntityObject(QObject *parent = 0);
    virtual ~MessageEntityObject();

    void setLanguage(const QString &language);
    QString language() const;

    void setLength(qint32 length);
    qint32 length() const;

    void setOffset(qint32 offset);
    qint32 offset() const;

    void setUrl(const QString &url);
    QString url() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessageEntity &core);
    MessageEntity core() const;

    MessageEntityObject &operator =(const MessageEntity &b);
    bool operator ==(const MessageEntity &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void languageChanged();
    void lengthChanged();
    void offsetChanged();
    void urlChanged();

private Q_SLOTS:

private:
    MessageEntity m_core;
};

#endif // LQTG_TYPE_MESSAGEENTITY_OBJECT
