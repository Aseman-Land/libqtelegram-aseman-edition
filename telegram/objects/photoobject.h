// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PHOTO_OBJECT
#define LQTG_TYPE_PHOTO_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/photo.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT PhotoObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PhotoClassType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 date READ date WRITE setDate NOTIFY dateChanged)
    Q_PROPERTY(qint64 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(QList<PhotoSize> sizes READ sizes WRITE setSizes NOTIFY sizesChanged)
    Q_PROPERTY(Photo core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PhotoClassType {
        TypePhotoEmpty,
        TypePhoto
    };

    PhotoObject(const Photo &core, QObject *parent = 0);
    PhotoObject(QObject *parent = 0);
    virtual ~PhotoObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setDate(qint32 date);
    qint32 date() const;

    void setId(qint64 id);
    qint64 id() const;

    void setSizes(const QList<PhotoSize> &sizes);
    QList<PhotoSize> sizes() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const Photo &core);
    Photo core() const;

    PhotoObject &operator =(const Photo &b);
    bool operator ==(const Photo &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void dateChanged();
    void idChanged();
    void sizesChanged();

private Q_SLOTS:

private:
    Photo m_core;
};

#endif // LQTG_TYPE_PHOTO_OBJECT
