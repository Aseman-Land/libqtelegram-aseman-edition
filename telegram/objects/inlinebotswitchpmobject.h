// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INLINEBOTSWITCHPM_OBJECT
#define LQTG_TYPE_INLINEBOTSWITCHPM_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inlinebotswitchpm.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT InlineBotSwitchPMObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InlineBotSwitchPMClassType)
    Q_PROPERTY(QString startParam READ startParam WRITE setStartParam NOTIFY startParamChanged)
    Q_PROPERTY(QString text READ text WRITE setText NOTIFY textChanged)
    Q_PROPERTY(InlineBotSwitchPM core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InlineBotSwitchPMClassType {
        TypeInlineBotSwitchPM
    };

    InlineBotSwitchPMObject(const InlineBotSwitchPM &core, QObject *parent = 0);
    InlineBotSwitchPMObject(QObject *parent = 0);
    virtual ~InlineBotSwitchPMObject();

    void setStartParam(const QString &startParam);
    QString startParam() const;

    void setText(const QString &text);
    QString text() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InlineBotSwitchPM &core);
    InlineBotSwitchPM core() const;

    InlineBotSwitchPMObject &operator =(const InlineBotSwitchPM &b);
    bool operator ==(const InlineBotSwitchPM &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void startParamChanged();
    void textChanged();

private Q_SLOTS:

private:
    InlineBotSwitchPM m_core;
};

inline InlineBotSwitchPMObject::InlineBotSwitchPMObject(const InlineBotSwitchPM &core, QObject *parent) :
    TelegramTypeQObject(parent),
    m_core(core)
{
}

inline InlineBotSwitchPMObject::InlineBotSwitchPMObject(QObject *parent) :
    TelegramTypeQObject(parent),
    m_core()
{
}

inline InlineBotSwitchPMObject::~InlineBotSwitchPMObject() {
}

inline void InlineBotSwitchPMObject::setStartParam(const QString &startParam) {
    if(m_core.startParam() == startParam) return;
    m_core.setStartParam(startParam);
    Q_EMIT startParamChanged();
    Q_EMIT coreChanged();
}

inline QString InlineBotSwitchPMObject::startParam() const {
    return m_core.startParam();
}

inline void InlineBotSwitchPMObject::setText(const QString &text) {
    if(m_core.text() == text) return;
    m_core.setText(text);
    Q_EMIT textChanged();
    Q_EMIT coreChanged();
}

inline QString InlineBotSwitchPMObject::text() const {
    return m_core.text();
}

inline InlineBotSwitchPMObject &InlineBotSwitchPMObject::operator =(const InlineBotSwitchPM &b) {
    if(m_core == b) return *this;
    m_core = b;

    Q_EMIT startParamChanged();
    Q_EMIT textChanged();
    Q_EMIT coreChanged();
    return *this;
}

inline bool InlineBotSwitchPMObject::operator ==(const InlineBotSwitchPM &b) const {
    return m_core == b;
}

inline void InlineBotSwitchPMObject::setClassType(quint32 classType) {
    InlineBotSwitchPM::InlineBotSwitchPMClassType result;
    switch(classType) {
    case TypeInlineBotSwitchPM:
        result = InlineBotSwitchPM::typeInlineBotSwitchPM;
        break;
    default:
        result = InlineBotSwitchPM::typeInlineBotSwitchPM;
        break;
    }

    if(m_core.classType() == result) return;
    m_core.setClassType(result);
    Q_EMIT classTypeChanged();
    Q_EMIT coreChanged();
}

inline quint32 InlineBotSwitchPMObject::classType() const {
    int result;
    switch(static_cast<qint64>(m_core.classType())) {
    case InlineBotSwitchPM::typeInlineBotSwitchPM:
        result = TypeInlineBotSwitchPM;
        break;
    default:
        result = TypeInlineBotSwitchPM;
        break;
    }

    return result;
}

inline void InlineBotSwitchPMObject::setCore(const InlineBotSwitchPM &core) {
    operator =(core);
}

inline InlineBotSwitchPM InlineBotSwitchPMObject::core() const {
    return m_core;
}

#endif // LQTG_TYPE_INLINEBOTSWITCHPM_OBJECT
