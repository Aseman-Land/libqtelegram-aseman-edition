// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_BOTINLINERESULT
#define LQTG_TYPE_BOTINLINERESULT

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QString>
#include "document.h"
#include <QtGlobal>
#include "photo.h"
#include "botinlinemessage.h"

class LIBQTELEGRAMSHARED_EXPORT BotInlineResult : public TelegramTypeObject
{
public:
    enum BotInlineResultClassType {
        typeBotInlineResult = 0x9bebaeb9,
        typeBotInlineMediaResult = 0x17db940b
    };

    BotInlineResult(BotInlineResultClassType classType = typeBotInlineResult, InboundPkt *in = 0);
    BotInlineResult(InboundPkt *in);
    BotInlineResult(const Null&);
    virtual ~BotInlineResult();

    void setContentType(const QString &contentType);
    QString contentType() const;

    void setContentUrl(const QString &contentUrl);
    QString contentUrl() const;

    void setDescription(const QString &description);
    QString description() const;

    void setDocument(const Document &document);
    Document document() const;

    void setDuration(qint32 duration);
    qint32 duration() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setH(qint32 h);
    qint32 h() const;

    void setId(const QString &id);
    QString id() const;

    void setPhoto(const Photo &photo);
    Photo photo() const;

    void setSendMessage(const BotInlineMessage &sendMessage);
    BotInlineMessage sendMessage() const;

    void setThumbUrl(const QString &thumbUrl);
    QString thumbUrl() const;

    void setTitle(const QString &title);
    QString title() const;

    void setType(const QString &type);
    QString type() const;

    void setUrl(const QString &url);
    QString url() const;

    void setW(qint32 w);
    qint32 w() const;

    void setClassType(BotInlineResultClassType classType);
    BotInlineResultClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const BotInlineResult &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QString m_contentType;
    QString m_contentUrl;
    QString m_description;
    Document m_document;
    qint32 m_duration;
    qint32 m_flags;
    qint32 m_h;
    QString m_id;
    Photo m_photo;
    BotInlineMessage m_sendMessage;
    QString m_thumbUrl;
    QString m_title;
    QString m_type;
    QString m_url;
    qint32 m_w;
    BotInlineResultClassType m_classType;
};

Q_DECLARE_METATYPE(BotInlineResult)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const BotInlineResult &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, BotInlineResult &item);

#endif // LQTG_TYPE_BOTINLINERESULT
