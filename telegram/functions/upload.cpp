// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "upload.h"
#include "core/inboundpkt.h"
#include "core/outboundpkt.h"
#include "../coretypes.h"

using namespace Tg;

Functions::Upload::Upload() {
}

Functions::Upload::~Upload() {
}

bool Functions::Upload::saveFilePart(OutboundPkt *out, qint64 fileId, qint32 filePart, const QByteArray &bytes) {
    out->appendInt(fncUploadSaveFilePart);
    out->appendLong(fileId);
    out->appendInt(filePart);
    out->appendBytes(bytes);
    return true;
}

bool Functions::Upload::saveFilePartResult(InboundPkt *in) {
    bool result;
    result = in->fetchBool();
    return result;
}

bool Functions::Upload::getFile(OutboundPkt *out, const InputFileLocation &location, qint32 offset, qint32 limit) {
    out->appendInt(fncUploadGetFile);
    if(!location.push(out)) return false;
    out->appendInt(offset);
    out->appendInt(limit);
    return true;
}

UploadFile Functions::Upload::getFileResult(InboundPkt *in) {
    UploadFile result;
    if(!result.fetch(in)) return result;
    return result;
}

bool Functions::Upload::saveBigFilePart(OutboundPkt *out, qint64 fileId, qint32 filePart, qint32 fileTotalParts, const QByteArray &bytes) {
    out->appendInt(fncUploadSaveBigFilePart);
    out->appendLong(fileId);
    out->appendInt(filePart);
    out->appendInt(fileTotalParts);
    out->appendBytes(bytes);
    return true;
}

bool Functions::Upload::saveBigFilePartResult(InboundPkt *in) {
    bool result;
    result = in->fetchBool();
    return result;
}

