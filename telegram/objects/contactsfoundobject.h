// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACTSFOUND_OBJECT
#define LQTG_TYPE_CONTACTSFOUND_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/contactsfound.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ContactsFoundObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ContactsFoundClassType)
    Q_PROPERTY(QList<Chat> chats READ chats WRITE setChats NOTIFY chatsChanged)
    Q_PROPERTY(QList<Peer> results READ results WRITE setResults NOTIFY resultsChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(ContactsFound core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ContactsFoundClassType {
        TypeContactsFound
    };

    ContactsFoundObject(const ContactsFound &core, QObject *parent = 0);
    ContactsFoundObject(QObject *parent = 0);
    virtual ~ContactsFoundObject();

    void setChats(const QList<Chat> &chats);
    QList<Chat> chats() const;

    void setResults(const QList<Peer> &results);
    QList<Peer> results() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ContactsFound &core);
    ContactsFound core() const;

    ContactsFoundObject &operator =(const ContactsFound &b);
    bool operator ==(const ContactsFound &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void chatsChanged();
    void resultsChanged();
    void usersChanged();

private Q_SLOTS:

private:
    ContactsFound m_core;
};

#endif // LQTG_TYPE_CONTACTSFOUND_OBJECT
