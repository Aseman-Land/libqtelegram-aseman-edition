// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESSTICKERS_OBJECT
#define LQTG_TYPE_MESSAGESSTICKERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesstickers.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesStickersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesStickersType)
    Q_PROPERTY(QString hash READ hash WRITE setHash NOTIFY hashChanged)
    Q_PROPERTY(QList<Document> stickers READ stickers WRITE setStickers NOTIFY stickersChanged)
    Q_PROPERTY(MessagesStickers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesStickersType {
        TypeMessagesStickersNotModified,
        TypeMessagesStickers
    };

    MessagesStickersObject(const MessagesStickers &core, QObject *parent = 0);
    MessagesStickersObject(QObject *parent = 0);
    virtual ~MessagesStickersObject();

    void setHash(const QString &hash);
    QString hash() const;

    void setStickers(const QList<Document> &stickers);
    QList<Document> stickers() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesStickers &core);
    MessagesStickers core() const;

    MessagesStickersObject &operator =(const MessagesStickers &b);
    bool operator ==(const MessagesStickers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void hashChanged();
    void stickersChanged();

private Q_SLOTS:

private:
    MessagesStickers m_core;
};

#endif // LQTG_TYPE_MESSAGESSTICKERS_OBJECT
