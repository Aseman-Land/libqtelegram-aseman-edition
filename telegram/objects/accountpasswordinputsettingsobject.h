// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_ACCOUNTPASSWORDINPUTSETTINGS_OBJECT
#define LQTG_TYPE_ACCOUNTPASSWORDINPUTSETTINGS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/accountpasswordinputsettings.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT AccountPasswordInputSettingsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(AccountPasswordInputSettingsClassType)
    Q_PROPERTY(QString email READ email WRITE setEmail NOTIFY emailChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(QString hint READ hint WRITE setHint NOTIFY hintChanged)
    Q_PROPERTY(QByteArray newPasswordHash READ newPasswordHash WRITE setNewPasswordHash NOTIFY newPasswordHashChanged)
    Q_PROPERTY(QByteArray newSalt READ newSalt WRITE setNewSalt NOTIFY newSaltChanged)
    Q_PROPERTY(AccountPasswordInputSettings core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum AccountPasswordInputSettingsClassType {
        TypeAccountPasswordInputSettings
    };

    AccountPasswordInputSettingsObject(const AccountPasswordInputSettings &core, QObject *parent = 0);
    AccountPasswordInputSettingsObject(QObject *parent = 0);
    virtual ~AccountPasswordInputSettingsObject();

    void setEmail(const QString &email);
    QString email() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setHint(const QString &hint);
    QString hint() const;

    void setNewPasswordHash(const QByteArray &newPasswordHash);
    QByteArray newPasswordHash() const;

    void setNewSalt(const QByteArray &newSalt);
    QByteArray newSalt() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const AccountPasswordInputSettings &core);
    AccountPasswordInputSettings core() const;

    AccountPasswordInputSettingsObject &operator =(const AccountPasswordInputSettings &b);
    bool operator ==(const AccountPasswordInputSettings &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void emailChanged();
    void flagsChanged();
    void hintChanged();
    void newPasswordHashChanged();
    void newSaltChanged();

private Q_SLOTS:

private:
    AccountPasswordInputSettings m_core;
};

#endif // LQTG_TYPE_ACCOUNTPASSWORDINPUTSETTINGS_OBJECT
