// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_ENCRYPTEDFILE_OBJECT
#define LQTG_TYPE_ENCRYPTEDFILE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/encryptedfile.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT EncryptedFileObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(EncryptedFileType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 dcId READ dcId WRITE setDcId NOTIFY dcIdChanged)
    Q_PROPERTY(qint64 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(qint32 keyFingerprint READ keyFingerprint WRITE setKeyFingerprint NOTIFY keyFingerprintChanged)
    Q_PROPERTY(qint32 size READ size WRITE setSize NOTIFY sizeChanged)
    Q_PROPERTY(EncryptedFile core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum EncryptedFileType {
        TypeEncryptedFileEmpty,
        TypeEncryptedFile
    };

    EncryptedFileObject(const EncryptedFile &core, QObject *parent = 0);
    EncryptedFileObject(QObject *parent = 0);
    virtual ~EncryptedFileObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setDcId(qint32 dcId);
    qint32 dcId() const;

    void setId(qint64 id);
    qint64 id() const;

    void setKeyFingerprint(qint32 keyFingerprint);
    qint32 keyFingerprint() const;

    void setSize(qint32 size);
    qint32 size() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const EncryptedFile &core);
    EncryptedFile core() const;

    EncryptedFileObject &operator =(const EncryptedFile &b);
    bool operator ==(const EncryptedFile &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void dcIdChanged();
    void idChanged();
    void keyFingerprintChanged();
    void sizeChanged();

private Q_SLOTS:

private:
    EncryptedFile m_core;
};

#endif // LQTG_TYPE_ENCRYPTEDFILE_OBJECT
