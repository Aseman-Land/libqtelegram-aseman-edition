// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTBOTINLINEMESSAGEID_OBJECT
#define LQTG_TYPE_INPUTBOTINLINEMESSAGEID_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputbotinlinemessageid.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT InputBotInlineMessageIDObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputBotInlineMessageIDClassType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 dcId READ dcId WRITE setDcId NOTIFY dcIdChanged)
    Q_PROPERTY(qint64 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(InputBotInlineMessageID core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputBotInlineMessageIDClassType {
        TypeInputBotInlineMessageID
    };

    InputBotInlineMessageIDObject(const InputBotInlineMessageID &core, QObject *parent = 0);
    InputBotInlineMessageIDObject(QObject *parent = 0);
    virtual ~InputBotInlineMessageIDObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setDcId(qint32 dcId);
    qint32 dcId() const;

    void setId(qint64 id);
    qint64 id() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputBotInlineMessageID &core);
    InputBotInlineMessageID core() const;

    InputBotInlineMessageIDObject &operator =(const InputBotInlineMessageID &b);
    bool operator ==(const InputBotInlineMessageID &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void dcIdChanged();
    void idChanged();

private Q_SLOTS:

private:
    InputBotInlineMessageID m_core;
};

#endif // LQTG_TYPE_INPUTBOTINLINEMESSAGEID_OBJECT
