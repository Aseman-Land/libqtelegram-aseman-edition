// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_TOPPEERCATEGORYPEERS_OBJECT
#define LQTG_TYPE_TOPPEERCATEGORYPEERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/toppeercategorypeers.h"

#include <QPointer>
#include "toppeercategoryobject.h"

class LIBQTELEGRAMSHARED_EXPORT TopPeerCategoryPeersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(TopPeerCategoryPeersClassType)
    Q_PROPERTY(TopPeerCategoryObject* category READ category WRITE setCategory NOTIFY categoryChanged)
    Q_PROPERTY(qint32 count READ count WRITE setCount NOTIFY countChanged)
    Q_PROPERTY(QList<TopPeer> peers READ peers WRITE setPeers NOTIFY peersChanged)
    Q_PROPERTY(TopPeerCategoryPeers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum TopPeerCategoryPeersClassType {
        TypeTopPeerCategoryPeers
    };

    TopPeerCategoryPeersObject(const TopPeerCategoryPeers &core, QObject *parent = 0);
    TopPeerCategoryPeersObject(QObject *parent = 0);
    virtual ~TopPeerCategoryPeersObject();

    void setCategory(TopPeerCategoryObject* category);
    TopPeerCategoryObject* category() const;

    void setCount(qint32 count);
    qint32 count() const;

    void setPeers(const QList<TopPeer> &peers);
    QList<TopPeer> peers() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const TopPeerCategoryPeers &core);
    TopPeerCategoryPeers core() const;

    TopPeerCategoryPeersObject &operator =(const TopPeerCategoryPeers &b);
    bool operator ==(const TopPeerCategoryPeers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void categoryChanged();
    void countChanged();
    void peersChanged();

private Q_SLOTS:
    void coreCategoryChanged();

private:
    QPointer<TopPeerCategoryObject> m_category;
    TopPeerCategoryPeers m_core;
};

#endif // LQTG_TYPE_TOPPEERCATEGORYPEERS_OBJECT
