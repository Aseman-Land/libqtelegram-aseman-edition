// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_STICKERPACK_OBJECT
#define LQTG_TYPE_STICKERPACK_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/stickerpack.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT StickerPackObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(StickerPackClassType)
    Q_PROPERTY(QList<qint64> documents READ documents WRITE setDocuments NOTIFY documentsChanged)
    Q_PROPERTY(QString emoticon READ emoticon WRITE setEmoticon NOTIFY emoticonChanged)
    Q_PROPERTY(StickerPack core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum StickerPackClassType {
        TypeStickerPack
    };

    StickerPackObject(const StickerPack &core, QObject *parent = 0);
    StickerPackObject(QObject *parent = 0);
    virtual ~StickerPackObject();

    void setDocuments(const QList<qint64> &documents);
    QList<qint64> documents() const;

    void setEmoticon(const QString &emoticon);
    QString emoticon() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const StickerPack &core);
    StickerPack core() const;

    StickerPackObject &operator =(const StickerPack &b);
    bool operator ==(const StickerPack &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void documentsChanged();
    void emoticonChanged();

private Q_SLOTS:

private:
    StickerPack m_core;
};

#endif // LQTG_TYPE_STICKERPACK_OBJECT
