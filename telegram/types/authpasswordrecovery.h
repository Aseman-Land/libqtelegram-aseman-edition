// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_AUTHPASSWORDRECOVERY
#define LQTG_TYPE_AUTHPASSWORDRECOVERY

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QString>

class LIBQTELEGRAMSHARED_EXPORT AuthPasswordRecovery : public TelegramTypeObject
{
public:
    enum AuthPasswordRecoveryType {
        typeAuthPasswordRecovery = 0x137948a5
    };

    AuthPasswordRecovery(AuthPasswordRecoveryType classType = typeAuthPasswordRecovery, InboundPkt *in = 0);
    AuthPasswordRecovery(InboundPkt *in);
    AuthPasswordRecovery(const Null&);
    virtual ~AuthPasswordRecovery();

    void setEmailPattern(const QString &emailPattern);
    QString emailPattern() const;

    void setClassType(AuthPasswordRecoveryType classType);
    AuthPasswordRecoveryType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const AuthPasswordRecovery &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QString m_emailPattern;
    AuthPasswordRecoveryType m_classType;
};

Q_DECLARE_METATYPE(AuthPasswordRecovery)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const AuthPasswordRecovery &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, AuthPasswordRecovery &item);

#endif // LQTG_TYPE_AUTHPASSWORDRECOVERY
