// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGEFWDHEADER_OBJECT
#define LQTG_TYPE_MESSAGEFWDHEADER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagefwdheader.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessageFwdHeaderObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessageFwdHeaderClassType)
    Q_PROPERTY(qint32 channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)
    Q_PROPERTY(qint32 channelPost READ channelPost WRITE setChannelPost NOTIFY channelPostChanged)
    Q_PROPERTY(qint32 date READ date WRITE setDate NOTIFY dateChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(qint32 fromId READ fromId WRITE setFromId NOTIFY fromIdChanged)
    Q_PROPERTY(MessageFwdHeader core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessageFwdHeaderClassType {
        TypeMessageFwdHeader
    };

    MessageFwdHeaderObject(const MessageFwdHeader &core, QObject *parent = 0);
    MessageFwdHeaderObject(QObject *parent = 0);
    virtual ~MessageFwdHeaderObject();

    void setChannelId(qint32 channelId);
    qint32 channelId() const;

    void setChannelPost(qint32 channelPost);
    qint32 channelPost() const;

    void setDate(qint32 date);
    qint32 date() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setFromId(qint32 fromId);
    qint32 fromId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessageFwdHeader &core);
    MessageFwdHeader core() const;

    MessageFwdHeaderObject &operator =(const MessageFwdHeader &b);
    bool operator ==(const MessageFwdHeader &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void channelIdChanged();
    void channelPostChanged();
    void dateChanged();
    void flagsChanged();
    void fromIdChanged();

private Q_SLOTS:

private:
    MessageFwdHeader m_core;
};

#endif // LQTG_TYPE_MESSAGEFWDHEADER_OBJECT
