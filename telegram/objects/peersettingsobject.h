// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_PEERSETTINGS_OBJECT
#define LQTG_TYPE_PEERSETTINGS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/peersettings.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT PeerSettingsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(PeerSettingsClassType)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(bool reportSpam READ reportSpam WRITE setReportSpam NOTIFY reportSpamChanged)
    Q_PROPERTY(PeerSettings core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum PeerSettingsClassType {
        TypePeerSettings
    };

    PeerSettingsObject(const PeerSettings &core, QObject *parent = 0);
    PeerSettingsObject(QObject *parent = 0);
    virtual ~PeerSettingsObject();

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setReportSpam(bool reportSpam);
    bool reportSpam() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const PeerSettings &core);
    PeerSettings core() const;

    PeerSettingsObject &operator =(const PeerSettings &b);
    bool operator ==(const PeerSettings &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void flagsChanged();
    void reportSpamChanged();

private Q_SLOTS:

private:
    PeerSettings m_core;
};

#endif // LQTG_TYPE_PEERSETTINGS_OBJECT
