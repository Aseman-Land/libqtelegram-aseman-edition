// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACTSIMPORTEDCONTACTS
#define LQTG_TYPE_CONTACTSIMPORTEDCONTACTS

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QList>
#include "importedcontact.h"
#include <QtGlobal>
#include "user.h"

class LIBQTELEGRAMSHARED_EXPORT ContactsImportedContacts : public TelegramTypeObject
{
public:
    enum ContactsImportedContactsType {
        typeContactsImportedContacts = 0xad524315
    };

    ContactsImportedContacts(ContactsImportedContactsType classType = typeContactsImportedContacts, InboundPkt *in = 0);
    ContactsImportedContacts(InboundPkt *in);
    ContactsImportedContacts(const Null&);
    virtual ~ContactsImportedContacts();

    void setImported(const QList<ImportedContact> &imported);
    QList<ImportedContact> imported() const;

    void setRetryContacts(const QList<qint64> &retryContacts);
    QList<qint64> retryContacts() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(ContactsImportedContactsType classType);
    ContactsImportedContactsType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const ContactsImportedContacts &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

private:
    QList<ImportedContact> m_imported;
    QList<qint64> m_retryContacts;
    QList<User> m_users;
    ContactsImportedContactsType m_classType;
};

Q_DECLARE_METATYPE(ContactsImportedContacts)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const ContactsImportedContacts &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, ContactsImportedContacts &item);

#endif // LQTG_TYPE_CONTACTSIMPORTEDCONTACTS
