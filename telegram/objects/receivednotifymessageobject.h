// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_RECEIVEDNOTIFYMESSAGE_OBJECT
#define LQTG_TYPE_RECEIVEDNOTIFYMESSAGE_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/receivednotifymessage.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ReceivedNotifyMessageObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ReceivedNotifyMessageClassType)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(qint32 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(ReceivedNotifyMessage core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ReceivedNotifyMessageClassType {
        TypeReceivedNotifyMessage
    };

    ReceivedNotifyMessageObject(const ReceivedNotifyMessage &core, QObject *parent = 0);
    ReceivedNotifyMessageObject(QObject *parent = 0);
    virtual ~ReceivedNotifyMessageObject();

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setId(qint32 id);
    qint32 id() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ReceivedNotifyMessage &core);
    ReceivedNotifyMessage core() const;

    ReceivedNotifyMessageObject &operator =(const ReceivedNotifyMessage &b);
    bool operator ==(const ReceivedNotifyMessage &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void flagsChanged();
    void idChanged();

private Q_SLOTS:

private:
    ReceivedNotifyMessage m_core;
};

#endif // LQTG_TYPE_RECEIVEDNOTIFYMESSAGE_OBJECT
