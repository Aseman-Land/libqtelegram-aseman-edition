// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESPEERDIALOGS_OBJECT
#define LQTG_TYPE_MESSAGESPEERDIALOGS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagespeerdialogs.h"

#include <QPointer>
#include "updatesstateobject.h"

class LIBQTELEGRAMSHARED_EXPORT MessagesPeerDialogsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesPeerDialogsClassType)
    Q_PROPERTY(QList<Chat> chats READ chats WRITE setChats NOTIFY chatsChanged)
    Q_PROPERTY(QList<Dialog> dialogs READ dialogs WRITE setDialogs NOTIFY dialogsChanged)
    Q_PROPERTY(QList<Message> messages READ messages WRITE setMessages NOTIFY messagesChanged)
    Q_PROPERTY(UpdatesStateObject* state READ state WRITE setState NOTIFY stateChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(MessagesPeerDialogs core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesPeerDialogsClassType {
        TypeMessagesPeerDialogs
    };

    MessagesPeerDialogsObject(const MessagesPeerDialogs &core, QObject *parent = 0);
    MessagesPeerDialogsObject(QObject *parent = 0);
    virtual ~MessagesPeerDialogsObject();

    void setChats(const QList<Chat> &chats);
    QList<Chat> chats() const;

    void setDialogs(const QList<Dialog> &dialogs);
    QList<Dialog> dialogs() const;

    void setMessages(const QList<Message> &messages);
    QList<Message> messages() const;

    void setState(UpdatesStateObject* state);
    UpdatesStateObject* state() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesPeerDialogs &core);
    MessagesPeerDialogs core() const;

    MessagesPeerDialogsObject &operator =(const MessagesPeerDialogs &b);
    bool operator ==(const MessagesPeerDialogs &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void chatsChanged();
    void dialogsChanged();
    void messagesChanged();
    void stateChanged();
    void usersChanged();

private Q_SLOTS:
    void coreStateChanged();

private:
    QPointer<UpdatesStateObject> m_state;
    MessagesPeerDialogs m_core;
};

#endif // LQTG_TYPE_MESSAGESPEERDIALOGS_OBJECT
