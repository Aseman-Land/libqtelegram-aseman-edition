// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_AUTHSENTCODE
#define LQTG_TYPE_AUTHSENTCODE

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QString>
#include <QtGlobal>

class LIBQTELEGRAMSHARED_EXPORT AuthSentCode : public TelegramTypeObject
{
public:
    enum AuthSentCodeType {
        typeAuthSentCode = 0xefed51d9,
        typeAuthSentAppCode = 0xe325edcf
    };

    AuthSentCode(AuthSentCodeType classType = typeAuthSentCode, InboundPkt *in = 0);
    AuthSentCode(InboundPkt *in);
    AuthSentCode(const Null&);
    virtual ~AuthSentCode();

    void setIsPassword(bool isPassword);
    bool isPassword() const;

    void setPhoneCodeHash(const QString &phoneCodeHash);
    QString phoneCodeHash() const;

    void setPhoneRegistered(bool phoneRegistered);
    bool phoneRegistered() const;

    void setSendCallTimeout(qint32 sendCallTimeout);
    qint32 sendCallTimeout() const;

    void setClassType(AuthSentCodeType classType);
    AuthSentCodeType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const AuthSentCode &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    bool m_isPassword;
    QString m_phoneCodeHash;
    bool m_phoneRegistered;
    qint32 m_sendCallTimeout;
    AuthSentCodeType m_classType;
};

Q_DECLARE_METATYPE(AuthSentCode)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const AuthSentCode &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, AuthSentCode &item);

#endif // LQTG_TYPE_AUTHSENTCODE
