// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHANNELPARTICIPANTSFILTER_OBJECT
#define LQTG_TYPE_CHANNELPARTICIPANTSFILTER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/channelparticipantsfilter.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ChannelParticipantsFilterObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ChannelParticipantsFilterType)
    Q_PROPERTY(ChannelParticipantsFilter core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ChannelParticipantsFilterType {
        TypeChannelParticipantsRecent,
        TypeChannelParticipantsAdmins,
        TypeChannelParticipantsKicked,
        TypeChannelParticipantsBots
    };

    ChannelParticipantsFilterObject(const ChannelParticipantsFilter &core, QObject *parent = 0);
    ChannelParticipantsFilterObject(QObject *parent = 0);
    virtual ~ChannelParticipantsFilterObject();

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ChannelParticipantsFilter &core);
    ChannelParticipantsFilter core() const;

    ChannelParticipantsFilterObject &operator =(const ChannelParticipantsFilter &b);
    bool operator ==(const ChannelParticipantsFilter &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();

private Q_SLOTS:

private:
    ChannelParticipantsFilter m_core;
};

#endif // LQTG_TYPE_CHANNELPARTICIPANTSFILTER_OBJECT
