// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "disabledfeature.h"
#include "core/inboundpkt.h"
#include "core/outboundpkt.h"
#include "../coretypes.h"

DisabledFeature::DisabledFeature(DisabledFeatureType classType, InboundPkt *in) :
    m_classType(classType)
{
    if(in) fetch(in);
}

DisabledFeature::DisabledFeature(InboundPkt *in) :
    m_classType(typeDisabledFeature)
{
    fetch(in);
}

DisabledFeature::~DisabledFeature() {
}

void DisabledFeature::setDescription(const QString &description) {
    m_description = description;
}

QString DisabledFeature::description() const {
    return m_description;
}

void DisabledFeature::setFeature(const QString &feature) {
    m_feature = feature;
}

QString DisabledFeature::feature() const {
    return m_feature;
}

bool DisabledFeature::operator ==(const DisabledFeature &b) {
    return m_description == b.m_description &&
           m_feature == b.m_feature;
}

void DisabledFeature::setClassType(DisabledFeature::DisabledFeatureType classType) {
    m_classType = classType;
}

DisabledFeature::DisabledFeatureType DisabledFeature::classType() const {
    return m_classType;
}

bool DisabledFeature::fetch(InboundPkt *in) {
    LQTG_FETCH_LOG;
    int x = in->fetchInt();
    switch(x) {
    case typeDisabledFeature: {
        m_feature = in->fetchQString();
        m_description = in->fetchQString();
        m_classType = static_cast<DisabledFeatureType>(x);
        return true;
    }
        break;
    
    default:
        LQTG_FETCH_ASSERT;
        return false;
    }
}

bool DisabledFeature::push(OutboundPkt *out) const {
    out->appendInt(m_classType);
    switch(m_classType) {
    case typeDisabledFeature: {
        out->appendQString(m_feature);
        out->appendQString(m_description);
        return true;
    }
        break;
    
    default:
        return false;
    }
}

