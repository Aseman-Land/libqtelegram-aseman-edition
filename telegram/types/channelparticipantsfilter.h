// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CHANNELPARTICIPANTSFILTER
#define LQTG_TYPE_CHANNELPARTICIPANTSFILTER

#include "telegramtypeobject.h"

#include <QMetaType>

class LIBQTELEGRAMSHARED_EXPORT ChannelParticipantsFilter : public TelegramTypeObject
{
public:
    enum ChannelParticipantsFilterType {
        typeChannelParticipantsRecent = 0xde3f3c79,
        typeChannelParticipantsAdmins = 0xb4608969,
        typeChannelParticipantsKicked = 0x3c37bb7a,
        typeChannelParticipantsBots = 0xb0d1865b
    };

    ChannelParticipantsFilter(ChannelParticipantsFilterType classType = typeChannelParticipantsRecent, InboundPkt *in = 0);
    ChannelParticipantsFilter(InboundPkt *in);
    ChannelParticipantsFilter(const Null&);
    virtual ~ChannelParticipantsFilter();

    void setClassType(ChannelParticipantsFilterType classType);
    ChannelParticipantsFilterType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const ChannelParticipantsFilter &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    ChannelParticipantsFilterType m_classType;
};

Q_DECLARE_METATYPE(ChannelParticipantsFilter)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const ChannelParticipantsFilter &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, ChannelParticipantsFilter &item);

#endif // LQTG_TYPE_CHANNELPARTICIPANTSFILTER
