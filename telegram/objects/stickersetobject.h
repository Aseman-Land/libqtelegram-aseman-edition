// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_STICKERSET_OBJECT
#define LQTG_TYPE_STICKERSET_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/stickerset.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT StickerSetObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(StickerSetClassType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 count READ count WRITE setCount NOTIFY countChanged)
    Q_PROPERTY(bool disabled READ disabled WRITE setDisabled NOTIFY disabledChanged)
    Q_PROPERTY(qint32 flags READ flags WRITE setFlags NOTIFY flagsChanged)
    Q_PROPERTY(qint32 hash READ hash WRITE setHash NOTIFY hashChanged)
    Q_PROPERTY(qint64 id READ id WRITE setId NOTIFY idChanged)
    Q_PROPERTY(bool installed READ installed WRITE setInstalled NOTIFY installedChanged)
    Q_PROPERTY(bool official READ official WRITE setOfficial NOTIFY officialChanged)
    Q_PROPERTY(QString shortName READ shortName WRITE setShortName NOTIFY shortNameChanged)
    Q_PROPERTY(QString title READ title WRITE setTitle NOTIFY titleChanged)
    Q_PROPERTY(StickerSet core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum StickerSetClassType {
        TypeStickerSet
    };

    StickerSetObject(const StickerSet &core, QObject *parent = 0);
    StickerSetObject(QObject *parent = 0);
    virtual ~StickerSetObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setCount(qint32 count);
    qint32 count() const;

    void setDisabled(bool disabled);
    bool disabled() const;

    void setFlags(qint32 flags);
    qint32 flags() const;

    void setHash(qint32 hash);
    qint32 hash() const;

    void setId(qint64 id);
    qint64 id() const;

    void setInstalled(bool installed);
    bool installed() const;

    void setOfficial(bool official);
    bool official() const;

    void setShortName(const QString &shortName);
    QString shortName() const;

    void setTitle(const QString &title);
    QString title() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const StickerSet &core);
    StickerSet core() const;

    StickerSetObject &operator =(const StickerSet &b);
    bool operator ==(const StickerSet &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void countChanged();
    void disabledChanged();
    void flagsChanged();
    void hashChanged();
    void idChanged();
    void installedChanged();
    void officialChanged();
    void shortNameChanged();
    void titleChanged();

private Q_SLOTS:

private:
    StickerSet m_core;
};

#endif // LQTG_TYPE_STICKERSET_OBJECT
