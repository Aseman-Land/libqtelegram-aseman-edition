// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_FOUNDGIF_OBJECT
#define LQTG_TYPE_FOUNDGIF_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/foundgif.h"

#include <QPointer>
#include "documentobject.h"
#include "photoobject.h"

class LIBQTELEGRAMSHARED_EXPORT FoundGifObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(FoundGifType)
    Q_PROPERTY(QString contentType READ contentType WRITE setContentType NOTIFY contentTypeChanged)
    Q_PROPERTY(QString contentUrl READ contentUrl WRITE setContentUrl NOTIFY contentUrlChanged)
    Q_PROPERTY(DocumentObject* document READ document WRITE setDocument NOTIFY documentChanged)
    Q_PROPERTY(qint32 h READ h WRITE setH NOTIFY hChanged)
    Q_PROPERTY(PhotoObject* photo READ photo WRITE setPhoto NOTIFY photoChanged)
    Q_PROPERTY(QString thumbUrl READ thumbUrl WRITE setThumbUrl NOTIFY thumbUrlChanged)
    Q_PROPERTY(QString url READ url WRITE setUrl NOTIFY urlChanged)
    Q_PROPERTY(qint32 w READ w WRITE setW NOTIFY wChanged)
    Q_PROPERTY(FoundGif core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum FoundGifType {
        TypeFoundGif,
        TypeFoundGifCached
    };

    FoundGifObject(const FoundGif &core, QObject *parent = 0);
    FoundGifObject(QObject *parent = 0);
    virtual ~FoundGifObject();

    void setContentType(const QString &contentType);
    QString contentType() const;

    void setContentUrl(const QString &contentUrl);
    QString contentUrl() const;

    void setDocument(DocumentObject* document);
    DocumentObject* document() const;

    void setH(qint32 h);
    qint32 h() const;

    void setPhoto(PhotoObject* photo);
    PhotoObject* photo() const;

    void setThumbUrl(const QString &thumbUrl);
    QString thumbUrl() const;

    void setUrl(const QString &url);
    QString url() const;

    void setW(qint32 w);
    qint32 w() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const FoundGif &core);
    FoundGif core() const;

    FoundGifObject &operator =(const FoundGif &b);
    bool operator ==(const FoundGif &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void contentTypeChanged();
    void contentUrlChanged();
    void documentChanged();
    void hChanged();
    void photoChanged();
    void thumbUrlChanged();
    void urlChanged();
    void wChanged();

private Q_SLOTS:
    void coreDocumentChanged();
    void corePhotoChanged();

private:
    QPointer<DocumentObject> m_document;
    QPointer<PhotoObject> m_photo;
    FoundGif m_core;
};

#endif // LQTG_TYPE_FOUNDGIF_OBJECT
