// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACTSCONTACTS_OBJECT
#define LQTG_TYPE_CONTACTSCONTACTS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/contactscontacts.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ContactsContactsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ContactsContactsClassType)
    Q_PROPERTY(QList<Contact> contacts READ contacts WRITE setContacts NOTIFY contactsChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(ContactsContacts core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ContactsContactsClassType {
        TypeContactsContactsNotModified,
        TypeContactsContacts
    };

    ContactsContactsObject(const ContactsContacts &core, QObject *parent = 0);
    ContactsContactsObject(QObject *parent = 0);
    virtual ~ContactsContactsObject();

    void setContacts(const QList<Contact> &contacts);
    QList<Contact> contacts() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ContactsContacts &core);
    ContactsContacts core() const;

    ContactsContactsObject &operator =(const ContactsContacts &b);
    bool operator ==(const ContactsContacts &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void contactsChanged();
    void usersChanged();

private Q_SLOTS:

private:
    ContactsContacts m_core;
};

#endif // LQTG_TYPE_CONTACTSCONTACTS_OBJECT
