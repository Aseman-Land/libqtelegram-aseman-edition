// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGEMEDIA
#define LQTG_TYPE_MESSAGEMEDIA

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QString>
#include "document.h"
#include "geopoint.h"
#include "photo.h"
#include <QtGlobal>
#include "webpage.h"

class LIBQTELEGRAMSHARED_EXPORT MessageMedia : public TelegramTypeObject
{
public:
    enum MessageMediaClassType {
        typeMessageMediaEmpty = 0x3ded6320,
        typeMessageMediaPhoto = 0x3d8ce53d,
        typeMessageMediaGeo = 0x56e0d474,
        typeMessageMediaContact = 0x5e7d2f39,
        typeMessageMediaUnsupported = 0x9f84f49e,
        typeMessageMediaDocument = 0xf3e02ea8,
        typeMessageMediaWebPage = 0xa32dd600,
        typeMessageMediaVenue = 0x7912b71f
    };

    MessageMedia(MessageMediaClassType classType = typeMessageMediaEmpty, InboundPkt *in = 0);
    MessageMedia(InboundPkt *in);
    MessageMedia(const Null&);
    virtual ~MessageMedia();

    void setAddress(const QString &address);
    QString address() const;

    void setCaption(const QString &caption);
    QString caption() const;

    void setDocument(const Document &document);
    Document document() const;

    void setFirstName(const QString &firstName);
    QString firstName() const;

    void setGeo(const GeoPoint &geo);
    GeoPoint geo() const;

    void setLastName(const QString &lastName);
    QString lastName() const;

    void setPhoneNumber(const QString &phoneNumber);
    QString phoneNumber() const;

    void setPhoto(const Photo &photo);
    Photo photo() const;

    void setProvider(const QString &provider);
    QString provider() const;

    void setTitle(const QString &title);
    QString title() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setVenueId(const QString &venueId);
    QString venueId() const;

    void setWebpage(const WebPage &webpage);
    WebPage webpage() const;

    void setClassType(MessageMediaClassType classType);
    MessageMediaClassType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const MessageMedia &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QString m_address;
    QString m_caption;
    Document m_document;
    QString m_firstName;
    GeoPoint m_geo;
    QString m_lastName;
    QString m_phoneNumber;
    Photo m_photo;
    QString m_provider;
    QString m_title;
    qint32 m_userId;
    QString m_venueId;
    WebPage m_webpage;
    MessageMediaClassType m_classType;
};

Q_DECLARE_METATYPE(MessageMedia)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const MessageMedia &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, MessageMedia &item);

#endif // LQTG_TYPE_MESSAGEMEDIA
