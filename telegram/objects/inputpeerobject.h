// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_INPUTPEER_OBJECT
#define LQTG_TYPE_INPUTPEER_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/inputpeer.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT InputPeerObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(InputPeerClassType)
    Q_PROPERTY(qint64 accessHash READ accessHash WRITE setAccessHash NOTIFY accessHashChanged)
    Q_PROPERTY(qint32 channelId READ channelId WRITE setChannelId NOTIFY channelIdChanged)
    Q_PROPERTY(qint32 chatId READ chatId WRITE setChatId NOTIFY chatIdChanged)
    Q_PROPERTY(qint32 userId READ userId WRITE setUserId NOTIFY userIdChanged)
    Q_PROPERTY(InputPeer core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum InputPeerClassType {
        TypeInputPeerEmpty,
        TypeInputPeerSelf,
        TypeInputPeerChat,
        TypeInputPeerUser,
        TypeInputPeerChannel
    };

    InputPeerObject(const InputPeer &core, QObject *parent = 0);
    InputPeerObject(QObject *parent = 0);
    virtual ~InputPeerObject();

    void setAccessHash(qint64 accessHash);
    qint64 accessHash() const;

    void setChannelId(qint32 channelId);
    qint32 channelId() const;

    void setChatId(qint32 chatId);
    qint32 chatId() const;

    void setUserId(qint32 userId);
    qint32 userId() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const InputPeer &core);
    InputPeer core() const;

    InputPeerObject &operator =(const InputPeer &b);
    bool operator ==(const InputPeer &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void accessHashChanged();
    void channelIdChanged();
    void chatIdChanged();
    void userIdChanged();

private Q_SLOTS:

private:
    InputPeer m_core;
};

#endif // LQTG_TYPE_INPUTPEER_OBJECT
