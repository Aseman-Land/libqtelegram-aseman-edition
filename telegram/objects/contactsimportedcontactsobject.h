// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_CONTACTSIMPORTEDCONTACTS_OBJECT
#define LQTG_TYPE_CONTACTSIMPORTEDCONTACTS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/contactsimportedcontacts.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT ContactsImportedContactsObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(ContactsImportedContactsClassType)
    Q_PROPERTY(QList<ImportedContact> imported READ imported WRITE setImported NOTIFY importedChanged)
    Q_PROPERTY(QList<qint64> retryContacts READ retryContacts WRITE setRetryContacts NOTIFY retryContactsChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(ContactsImportedContacts core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum ContactsImportedContactsClassType {
        TypeContactsImportedContacts
    };

    ContactsImportedContactsObject(const ContactsImportedContacts &core, QObject *parent = 0);
    ContactsImportedContactsObject(QObject *parent = 0);
    virtual ~ContactsImportedContactsObject();

    void setImported(const QList<ImportedContact> &imported);
    QList<ImportedContact> imported() const;

    void setRetryContacts(const QList<qint64> &retryContacts);
    QList<qint64> retryContacts() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const ContactsImportedContacts &core);
    ContactsImportedContacts core() const;

    ContactsImportedContactsObject &operator =(const ContactsImportedContacts &b);
    bool operator ==(const ContactsImportedContacts &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void importedChanged();
    void retryContactsChanged();
    void usersChanged();

private Q_SLOTS:

private:
    ContactsImportedContacts m_core;
};

#endif // LQTG_TYPE_CONTACTSIMPORTEDCONTACTS_OBJECT
