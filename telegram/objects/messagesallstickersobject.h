// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_MESSAGESALLSTICKERS_OBJECT
#define LQTG_TYPE_MESSAGESALLSTICKERS_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/messagesallstickers.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT MessagesAllStickersObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(MessagesAllStickersType)
    Q_PROPERTY(qint32 hash READ hash WRITE setHash NOTIFY hashChanged)
    Q_PROPERTY(QList<StickerSet> sets READ sets WRITE setSets NOTIFY setsChanged)
    Q_PROPERTY(MessagesAllStickers core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum MessagesAllStickersType {
        TypeMessagesAllStickersNotModified,
        TypeMessagesAllStickers
    };

    MessagesAllStickersObject(const MessagesAllStickers &core, QObject *parent = 0);
    MessagesAllStickersObject(QObject *parent = 0);
    virtual ~MessagesAllStickersObject();

    void setHash(qint32 hash);
    qint32 hash() const;

    void setSets(const QList<StickerSet> &sets);
    QList<StickerSet> sets() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const MessagesAllStickers &core);
    MessagesAllStickers core() const;

    MessagesAllStickersObject &operator =(const MessagesAllStickers &b);
    bool operator ==(const MessagesAllStickers &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void hashChanged();
    void setsChanged();

private Q_SLOTS:

private:
    MessagesAllStickers m_core;
};

#endif // LQTG_TYPE_MESSAGESALLSTICKERS_OBJECT
