// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_ACCOUNTPASSWORD
#define LQTG_TYPE_ACCOUNTPASSWORD

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QByteArray>
#include <QString>

class LIBQTELEGRAMSHARED_EXPORT AccountPassword : public TelegramTypeObject
{
public:
    enum AccountPasswordType {
        typeAccountNoPassword = 0x96dabc18,
        typeAccountPassword = 0x7c18141c
    };

    AccountPassword(AccountPasswordType classType = typeAccountNoPassword, InboundPkt *in = 0);
    AccountPassword(InboundPkt *in);
    AccountPassword(const Null&);
    virtual ~AccountPassword();

    void setCurrentSalt(const QByteArray &currentSalt);
    QByteArray currentSalt() const;

    void setEmailUnconfirmedPattern(const QString &emailUnconfirmedPattern);
    QString emailUnconfirmedPattern() const;

    void setHasRecovery(bool hasRecovery);
    bool hasRecovery() const;

    void setHint(const QString &hint);
    QString hint() const;

    void setNewSalt(const QByteArray &newSalt);
    QByteArray newSalt() const;

    void setClassType(AccountPasswordType classType);
    AccountPasswordType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const AccountPassword &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

    QByteArray getHash(QCryptographicHash::Algorithm alg = QCryptographicHash::Md5) const;

private:
    QByteArray m_currentSalt;
    QString m_emailUnconfirmedPattern;
    bool m_hasRecovery;
    QString m_hint;
    QByteArray m_newSalt;
    AccountPasswordType m_classType;
};

Q_DECLARE_METATYPE(AccountPassword)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const AccountPassword &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, AccountPassword &item);

#endif // LQTG_TYPE_ACCOUNTPASSWORD
