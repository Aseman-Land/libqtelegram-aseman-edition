// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_ACCOUNTAUTHORIZATIONS
#define LQTG_TYPE_ACCOUNTAUTHORIZATIONS

#include "telegramtypeobject.h"

#include <QMetaType>
#include <QList>
#include "authorization.h"

class LIBQTELEGRAMSHARED_EXPORT AccountAuthorizations : public TelegramTypeObject
{
public:
    enum AccountAuthorizationsType {
        typeAccountAuthorizations = 0x1250abde
    };

    AccountAuthorizations(AccountAuthorizationsType classType = typeAccountAuthorizations, InboundPkt *in = 0);
    AccountAuthorizations(InboundPkt *in);
    AccountAuthorizations(const Null&);
    virtual ~AccountAuthorizations();

    void setAuthorizations(const QList<Authorization> &authorizations);
    QList<Authorization> authorizations() const;

    void setClassType(AccountAuthorizationsType classType);
    AccountAuthorizationsType classType() const;

    bool fetch(InboundPkt *in);
    bool push(OutboundPkt *out) const;

    bool operator ==(const AccountAuthorizations &b) const;

    bool operator==(bool stt) const { return isNull() != stt; }
    bool operator!=(bool stt) const { return !operator ==(stt); }

private:
    QList<Authorization> m_authorizations;
    AccountAuthorizationsType m_classType;
};

Q_DECLARE_METATYPE(AccountAuthorizations)

QDataStream LIBQTELEGRAMSHARED_EXPORT &operator<<(QDataStream &stream, const AccountAuthorizations &item);
QDataStream LIBQTELEGRAMSHARED_EXPORT &operator>>(QDataStream &stream, AccountAuthorizations &item);

#endif // LQTG_TYPE_ACCOUNTAUTHORIZATIONS
