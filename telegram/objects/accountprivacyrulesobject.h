// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#ifndef LQTG_TYPE_ACCOUNTPRIVACYRULES_OBJECT
#define LQTG_TYPE_ACCOUNTPRIVACYRULES_OBJECT

#include "telegramtypeqobject.h"
#include "telegram/types/accountprivacyrules.h"

#include <QPointer>

class LIBQTELEGRAMSHARED_EXPORT AccountPrivacyRulesObject : public TelegramTypeQObject
{
    Q_OBJECT
    Q_ENUMS(AccountPrivacyRulesClassType)
    Q_PROPERTY(QList<PrivacyRule> rules READ rules WRITE setRules NOTIFY rulesChanged)
    Q_PROPERTY(QList<User> users READ users WRITE setUsers NOTIFY usersChanged)
    Q_PROPERTY(AccountPrivacyRules core READ core WRITE setCore NOTIFY coreChanged)
    Q_PROPERTY(quint32 classType READ classType WRITE setClassType NOTIFY classTypeChanged)

public:
    enum AccountPrivacyRulesClassType {
        TypeAccountPrivacyRules
    };

    AccountPrivacyRulesObject(const AccountPrivacyRules &core, QObject *parent = 0);
    AccountPrivacyRulesObject(QObject *parent = 0);
    virtual ~AccountPrivacyRulesObject();

    void setRules(const QList<PrivacyRule> &rules);
    QList<PrivacyRule> rules() const;

    void setUsers(const QList<User> &users);
    QList<User> users() const;

    void setClassType(quint32 classType);
    quint32 classType() const;

    void setCore(const AccountPrivacyRules &core);
    AccountPrivacyRules core() const;

    AccountPrivacyRulesObject &operator =(const AccountPrivacyRules &b);
    bool operator ==(const AccountPrivacyRules &b) const;

Q_SIGNALS:
    void coreChanged();
    void classTypeChanged();
    void rulesChanged();
    void usersChanged();

private Q_SLOTS:

private:
    AccountPrivacyRules m_core;
};

#endif // LQTG_TYPE_ACCOUNTPRIVACYRULES_OBJECT
